SET DATABASE UNIQUE NAME HSQLDB438C01E351
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE SQL LONGVAR IS LOB FALSE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON DEADLOCK TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 0
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 8
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE ROLE SESAMEROLE
CREATE ROLE R31
CREATE ROLE R311
CREATE ROLE R1
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE USER CANI PASSWORD DIGEST 'c134848e272d9dc68c1bf5f13fcb4596'
CREATE USER OTHERUSER PASSWORD DIGEST '339d41e558231c766f9a33722ff76a86'
CREATE USER BLAINE PASSWORD DIGEST '92eb5ffee6ae2fec3ad71c777531578f'
CREATE USER PUSER PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
CREATE USER MATT PASSWORD DIGEST '1cb25423f78b2d18642256b556c11279'
CREATE USER SA1 PASSWORD DIGEST 'b4169f3b7f14193ebfee9110a161d23a'
CREATE USER SA2 PASSWORD DIGEST '3809f6746ce86180f98ffa2868d721fd'
CREATE USER SA3 PASSWORD DIGEST '36913123e6f34919c91bacd31650f7ae'
CREATE USER ALTUSER1 PASSWORD DIGEST '319f4d26e3c536b5dd871bb2c52e3178'
CREATE USER ALTUSER2 PASSWORD DIGEST '319f4d26e3c536b5dd871bb2c52e3178'
CREATE USER OWNER1 PASSWORD DIGEST 'bb5cd64ea767adce97d47552fe75aec9'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE SCHEMA S2 AUTHORIZATION DBA
CREATE SCHEMA BSCH AUTHORIZATION BLAINE
CREATE SCHEMA SCHEMAFK1 AUTHORIZATION DBA
CREATE SCHEMA SCHEMAFK2 AUTHORIZATION DBA
CREATE SCHEMA SCHEMA1 AUTHORIZATION SA
CREATE SCHEMA SCHEMA_A AUTHORIZATION OWNER1
CREATE SCHEMA SCHEMA_B AUTHORIZATION R1
CREATE SCHEMA BLAINE AUTHORIZATION DBA
CREATE SCHEMA ALTS AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE SEQUENCE PUBLIC.S00 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S01 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S02 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S03 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S04 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S05 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S06 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S07 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S08 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S09 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S10 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S11 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S12 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S13 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S14 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S15 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S16 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S17 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S18 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S19 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS1 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS3 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS2 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS4 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS5 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS6 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS7 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS8 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PS9 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S1 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.S2 AS INTEGER START WITH 0
CREATE SEQUENCE PUBLIC.PSEQUENCE AS INTEGER START WITH 0
CREATE MEMORY TABLE PUBLIC.RMT00(I INTEGER)
CREATE INDEX RMI00 ON PUBLIC.RMT00(I)
CREATE MEMORY TABLE PUBLIC.MT15(I INTEGER,UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.MT16(I INTEGER,UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.MT17(I INTEGER,UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.MT18(I INTEGER,UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.MT19(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT20(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT21(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT22(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT23(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT24(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT25(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT26(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT27(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT28(I INTEGER)
CREATE MEMORY TABLE PUBLIC.MT29(I INTEGER)
CREATE CACHED TABLE PUBLIC.RCT00(I INTEGER)
CREATE INDEX RCI00 ON PUBLIC.RCT00(I)
CREATE CACHED TABLE PUBLIC.CT01(I INTEGER)
CREATE INDEX CI01 ON PUBLIC.CT01(I)
CREATE CACHED TABLE PUBLIC.CT02(I INTEGER)
CREATE INDEX CI02 ON PUBLIC.CT02(I)
CREATE CACHED TABLE PUBLIC.CT03(I INTEGER)
CREATE INDEX CI03 ON PUBLIC.CT03(I)
CREATE CACHED TABLE PUBLIC.CT04(I INTEGER)
CREATE INDEX CI04 ON PUBLIC.CT04(I)
CREATE CACHED TABLE PUBLIC.CT05(I INTEGER)
CREATE INDEX RCUI05 ON PUBLIC.CT05(I)
CREATE CACHED TABLE PUBLIC.CT06(I INTEGER)
CREATE INDEX CUI06 ON PUBLIC.CT06(I)
CREATE CACHED TABLE PUBLIC.CT07(I INTEGER)
CREATE INDEX CUI07 ON PUBLIC.CT07(I)
CREATE CACHED TABLE PUBLIC.CT08(I INTEGER)
CREATE INDEX CUI08 ON PUBLIC.CT08(I)
CREATE CACHED TABLE PUBLIC.CT09(I INTEGER)
CREATE INDEX CUI09 ON PUBLIC.CT09(I)
CREATE CACHED TABLE PUBLIC.CT10(I INTEGER)
CREATE CACHED TABLE PUBLIC.CT11(I INTEGER,CONSTRAINT CT11CK1 UNIQUE(I))
CREATE CACHED TABLE PUBLIC.CT12(I INTEGER,CONSTRAINT CT12CK1 UNIQUE(I))
CREATE CACHED TABLE PUBLIC.CT13(I INTEGER,CONSTRAINT CT13CK1 UNIQUE(I))
CREATE CACHED TABLE PUBLIC.CT14(I INTEGER,CONSTRAINT CT14CK1 UNIQUE(I))
CREATE CACHED TABLE PUBLIC.CT15(I INTEGER,FOREIGN KEY(I) REFERENCES PUBLIC.MT15(I))
CREATE CACHED TABLE PUBLIC.CT16(I INTEGER,FOREIGN KEY(I) REFERENCES PUBLIC.MT16(I))
CREATE CACHED TABLE PUBLIC.CT17(I INTEGER,FOREIGN KEY(I) REFERENCES PUBLIC.MT17(I))
CREATE CACHED TABLE PUBLIC.CT18(I INTEGER,FOREIGN KEY(I) REFERENCES PUBLIC.MT18(I))
CREATE CACHED TABLE PUBLIC.CT19(I INTEGER)
CREATE CACHED TABLE PUBLIC.MY_GROUP(ID INTEGER,GROUP_ID INTEGER)
CREATE CACHED TABLE PUBLIC.DUAL(A INTEGER)
CREATE CACHED TABLE PUBLIC.MY_SERVER(GROUP_ID INTEGER,SERVER_ID INTEGER,WEIGHT INTEGER)
CREATE VIEW PUBLIC.V_MY_SERVER (ID,SERVER_ID,WEIGHT) AS SELECT DISTINCT MG.ID,MS.SERVER_ID,MS.WEIGHT FROM(SELECT ID,GROUP_ID FROM PUBLIC.MY_GROUP UNION SELECT-1,-1 FROM PUBLIC.DUAL)MG,PUBLIC.MY_SERVER MS WHERE MG.GROUP_ID=MS.GROUP_ID
CREATE VIEW PUBLIC.V_TEST_VIEW (ID,SERVER_ID,WEIGHT) AS SELECT A.ID,B.SERVER_ID,B.WEIGHT FROM PUBLIC.V_MY_SERVER A JOIN PUBLIC.V_MY_SERVER B ON A.ID=B.ID
CREATE MEMORY TABLE PUBLIC.COLORS(ID INTEGER,VAL CHARACTER(10))
CREATE VIEW PUBLIC.V_COLORS (VID,VVAL) AS SELECT ID,VAL FROM PUBLIC.COLORS
CREATE VIEW PUBLIC.V_COLORS_O (VID,VVAL) AS SELECT ID,VAL FROM PUBLIC.COLORS ORDER BY ID DESC
CREATE VIEW PUBLIC.V_COLORS_O_L (VID,VVAL) AS SELECT ID,VAL FROM PUBLIC.COLORS ORDER BY ID DESC LIMIT 1 OFFSET 0
CREATE VIEW PUBLIC.V_COLORS_O_L_X (VID,VVAL) AS SELECT ID,VAL FROM PUBLIC.COLORS LIMIT 1 OFFSET 0
CREATE CACHED TABLE PUBLIC.THEME(IDTHEME INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,LIBELLE VARCHAR(10) CONSTRAINT THEMECOSNT NOT NULL,DESCRIPTION VARCHAR(10))
ALTER TABLE PUBLIC.THEME ALTER COLUMN IDTHEME RESTART WITH 2
CREATE MEMORY TABLE PUBLIC.CONFIGNODETYPE(CNT_NODETYPEID NUMERIC(10) NOT NULL PRIMARY KEY,CNT_PARENTID NUMERIC(10) NOT NULL,CNT_NAME VARCHAR(40) NOT NULL,CONSTRAINT FK_CNT_PARENTID FOREIGN KEY(CNT_PARENTID) REFERENCES PUBLIC.CONFIGNODETYPE(CNT_NODETYPEID))
CREATE MEMORY TABLE PUBLIC."Table3"("ID" INTEGER NOT NULL,"dd" INTEGER PRIMARY KEY)
CREATE CACHED TABLE PUBLIC."Artist"("ID" INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"Name" VARCHAR(50))
ALTER TABLE PUBLIC."Artist" ALTER COLUMN "ID" RESTART WITH 124
CREATE CACHED TABLE PUBLIC."Album"("ID" INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"Artist" INTEGER NOT NULL,"Name" VARCHAR(200),"Year" DATE,"CD" INTEGER NOT NULL,FOREIGN KEY("Artist") REFERENCES PUBLIC."Artist"("ID") ON DELETE CASCADE)
ALTER TABLE PUBLIC."Album" ALTER COLUMN "ID" RESTART WITH 173
CREATE CACHED TABLE PUBLIC."Song"("ID" INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"Album" INTEGER NOT NULL,"Name" VARCHAR(300),"Track" INTEGER,"Duration" TIME,"Genre" VARCHAR(50),FOREIGN KEY("Album") REFERENCES PUBLIC."Album"("ID") ON DELETE CASCADE)
ALTER TABLE PUBLIC."Song" ALTER COLUMN "ID" RESTART WITH 2670
CREATE MEMORY TABLE PUBLIC.TEST1(IDTEST INTEGER PRIMARY KEY,TEST VARCHAR(100))
CREATE MEMORY TABLE PUBLIC.TEST2(IDTEST2 INTEGER PRIMARY KEY,IDTEST INTEGER,TEST VARCHAR(100),FOREIGN KEY(IDTEST) REFERENCES PUBLIC.TEST1(IDTEST))
CREATE MEMORY TABLE PUBLIC.TABLEB(COLA INTEGER,COLB INTEGER,COLC INTEGER)
CREATE MEMORY TABLE PUBLIC.TABLEA(LIMIT VARCHAR(5),TOP INTEGER)
CREATE MEMORY TABLE PUBLIC.TEST_MAXROWS(ID INTEGER)
CREATE MEMORY TABLE PUBLIC.VEREIN(VCODE CHARACTER(10) NOT NULL)
CREATE UNIQUE INDEX VEREIN_PK ON PUBLIC.VEREIN(VCODE)
CREATE CACHED TABLE PUBLIC.TARRAY(ID INTEGER PRIMARY KEY,DESCRIPTION VARCHAR(20) ARRAY)
CREATE MEMORY TABLE PUBLIC.IARRAY(I BIGINT PRIMARY KEY,AR INTEGER ARRAY)
CREATE MEMORY TABLE PUBLIC.IBANX_PERMIT(ID INTEGER,A1 VARCHAR(10))
CREATE MEMORY TABLE PUBLIC."liste"("kosten" INTEGER,"preis" INTEGER)
CREATE MEMORY TABLE PUBLIC.J1(I INTEGER,VC VARCHAR(10))
CREATE CACHED TABLE PUBLIC.T5(I INTEGER)
CREATE CACHED TABLE PUBLIC.TESTTRIG12(ID INTEGER,DATA2 VARCHAR(20),UPDATED DATE)
CREATE CACHED TABLE PUBLIC.TESTTRIG13(ID INTEGER,DATA3 VARCHAR(20),OP VARCHAR(10))
CREATE VIEW PUBLIC.VIEWINST (VID,VDATA2,VDATA3) AS SELECT ID,DATA2,DATA3 FROM PUBLIC.TESTTRIG12 NATURAL JOIN PUBLIC.TESTTRIG13
CREATE MEMORY TABLE PUBLIC.DATE_TEST(DATECOL DATE)
CREATE MEMORY TABLE PUBLIC.HIST(MYDATE DATE,FILES INTEGER,SPACE INTEGER)
CREATE MEMORY TABLE PUBLIC.GROUP_BY_BUG(ORDER_ID INTEGER NOT NULL,ITEM_ID INTEGER NOT NULL,PRICE DOUBLE NOT NULL,TAX_RATE DOUBLE NOT NULL,QUANTITY INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.SINGLE(C INTEGER)
CREATE MEMORY TABLE PUBLIC.BAB(SALES DOUBLE,COST DOUBLE)
CREATE MEMORY TABLE PUBLIC.LOG_TABLE(STAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,MESSAGE VARCHAR(80) NOT NULL)
CREATE MEMORY TABLE PUBLIC.BASE_TABLE(ID BIGINT GENERATED ALWAYS AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,I INTEGER NOT NULL,VC VARCHAR(600) NOT NULL)
ALTER TABLE PUBLIC.BASE_TABLE ALTER COLUMN ID RESTART WITH 4
CREATE MEMORY TABLE PUBLIC.KD(KDVER INTEGER,KDID INTEGER)
CREATE MEMORY TABLE PUBLIC.K(KVER INTEGER,KID INTEGER,CHECK(PUBLIC.K.KID>0))
CREATE MEMORY TABLE PUBLIC.TSJ1(A INTEGER PRIMARY KEY,B INTEGER)
CREATE MEMORY TABLE PUBLIC.PT(I INTEGER)
CREATE CACHED TABLE PUBLIC.TRIGLOG(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL,DATA VARCHAR(20),OP VARCHAR(10))
ALTER TABLE PUBLIC.TRIGLOG ALTER COLUMN ID RESTART WITH 4
CREATE CACHED TABLE PUBLIC.TESTTRIG2(ID INTEGER,DATA VARCHAR(20),UPDATED DATE)
CREATE MEMORY TABLE PUBLIC.BASE(ID INTEGER)
CREATE MEMORY TABLE PUBLIC.CHILD(ID INTEGER,BASE_ID INTEGER)
CREATE MEMORY TABLE PUBLIC.EMP(COMPANY_ID VARCHAR(10),ID VARCHAR(20),SUPERVISOR_ID VARCHAR(20),PRIMARY KEY(COMPANY_ID,ID))
CREATE MEMORY TABLE PUBLIC.T_BOSS(FIRST VARCHAR(10),LAST VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.T_EMPLOYEE(FIRST VARCHAR(10),LAST VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.BOSS(ID INTEGER PRIMARY KEY,NAME VARCHAR(10),UNIQUE(NAME))
CREATE MEMORY TABLE PUBLIC.EMPLOYEE(ID INTEGER PRIMARY KEY,NAME VARCHAR(10),BOSSID INTEGER,FOREIGN KEY(BOSSID) REFERENCES PUBLIC.BOSS(ID),UNIQUE(NAME))
CREATE CACHED TABLE PUBLIC.PROPERTYVALUE(ID INTEGER,NAME CHARACTER(36),VALUE VARCHAR(255))
CREATE MEMORY TABLE PUBLIC.NAMES(NAME VARCHAR(20) PRIMARY KEY)
CREATE MEMORY TABLE PUBLIC.PARAMS(NAME VARCHAR(20) PRIMARY KEY,VALUE VARCHAR(20) NOT NULL)
CREATE MEMORY TABLE PUBLIC.SUPER(PK INTEGER PRIMARY KEY,ASS CHARACTER(3))
CREATE MEMORY TABLE PUBLIC.ASSOCIATED(PK CHARACTER(3),I INTEGER)
CREATE MEMORY TABLE PUBLIC.SUB(PK INTEGER PRIMARY KEY,ASS CHARACTER(3))
CREATE MEMORY TABLE PUBLIC.BREMSEN_DL_FZG(BREMSEN_DL_ID INTEGER NOT NULL,LFD_NR INTEGER NOT NULL,BREMSE_DL_FZGTYP CHARACTER(1),BREMSE_DL_ART CHARACTER(1),BREMSE_DL_VERF CHARACTER(1),BREMSE_DL_BAUART VARCHAR(4),BREMSE_DL_TYP CHARACTER(1),ORT_BEDIENUNG VARCHAR(4),LOESIGKEIT CHARACTER(1),BESCHREIBUNG VARCHAR(30),BREMSE_DL_GEW_ID INTEGER,UHRZEIT_ENDE TIMESTAMP NOT NULL,CONSTRAINT PK_BREMSEN_DL_FZG PRIMARY KEY(BREMSEN_DL_ID,LFD_NR),CONSTRAINT CHK_BREMSEN_DL_FZG CHECK((((((((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_FZGTYP IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_FZGTYP) IN (('W'),('T'),('t')))) AND ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_ART IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_ART) IN (('B'),('F'))))) AND ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_VERF IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_VERF) IN (('D'),('H'),('M'),('W'))))) AND ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_BAUART IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_BAUART) IN (('ALaH'),('ALaT'),('H2Lw'),('H3Lw'))))) AND ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_TYP IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.BREMSE_DL_TYP) IN (('D'),('B'),('S'),('H'),('K'),('F'))))) AND ((PUBLIC.BREMSEN_DL_FZG.ORT_BEDIENUNG IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.ORT_BEDIENUNG) IN (('BO'),('ST'),('BOST'))))) AND ((PUBLIC.BREMSEN_DL_FZG.LOESIGKEIT IS NULL) OR ((PUBLIC.BREMSEN_DL_FZG.LOESIGKEIT) IN (('e'),('m'),('M'))))))
CREATE MEMORY TABLE PUBLIC.BREMSEN_DL_GEWICHTE(BREMSE_DL_GEW_ID INTEGER NOT NULL,LFD_NR INTEGER NOT NULL,BREMSE_STELLUNG VARCHAR(2),GEWICHT_BRUTTO DOUBLE,GEWICHT_BREMSE DOUBLE,UHRZEIT_ENDE TIMESTAMP NOT NULL,CONSTRAINT PK_BREMSEN_DL_GEWICHTE PRIMARY KEY(BREMSE_DL_GEW_ID,LFD_NR),CONSTRAINT CHK_BREMSEN_DL_GEWICHTE CHECK((PUBLIC.BREMSEN_DL_GEWICHTE.BREMSE_STELLUNG IS NULL) OR ((PUBLIC.BREMSEN_DL_GEWICHTE.BREMSE_STELLUNG) IN (('G'),('GE'),('P'),('PE'),('R')))))
CREATE VIEW PUBLIC.LOK_BREMSE_LFDNR1_VIEW (BREMSEN_DL_ID,BREMSE_DL_GEW_ID,BREMSE_DL_ART,BREMSE_DL_VERF,BREMSE_DL_BAUART,BREMSE_DL_TYP,ORT_BEDIENUNG,LOESIGKEIT,BESCHREIBUNG,GEWICHT_BREMSE_G,GEWICHT_BREMSE_P,GEWICHT_BREMSE_R) AS SELECT BR.BREMSEN_DL_ID,BR.BREMSE_DL_GEW_ID,BR.BREMSE_DL_ART,BR.BREMSE_DL_VERF,BR.BREMSE_DL_BAUART,BR.BREMSE_DL_TYP,BR.ORT_BEDIENUNG,BR.LOESIGKEIT,BR.BESCHREIBUNG,GEW_G.GEWICHT_BREMSE,GEW_P.GEWICHT_BREMSE,GEW_R.GEWICHT_BREMSE FROM PUBLIC.BREMSEN_DL_FZG BR LEFT JOIN PUBLIC.BREMSEN_DL_GEWICHTE GEW_G ON BR.BREMSE_DL_GEW_ID=GEW_G.BREMSE_DL_GEW_ID AND GEW_G.BREMSE_STELLUNG='G'AND GEW_G.GEWICHT_BREMSE IS NOT NULL LEFT JOIN PUBLIC.BREMSEN_DL_GEWICHTE GEW_P ON BR.BREMSE_DL_GEW_ID=GEW_P.BREMSE_DL_GEW_ID AND GEW_P.BREMSE_STELLUNG='P'AND GEW_P.GEWICHT_BREMSE IS NOT NULL LEFT JOIN PUBLIC.BREMSEN_DL_GEWICHTE GEW_R ON BR.BREMSE_DL_GEW_ID=GEW_R.BREMSE_DL_GEW_ID AND GEW_R.BREMSE_STELLUNG='R'AND GEW_R.GEWICHT_BREMSE IS NOT NULL WHERE BR.LFD_NR=1 AND BR.BREMSE_DL_BAUART IN('ALaH','H2Lw')
CREATE CACHED TABLE PUBLIC.ARTICLE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(50))
ALTER TABLE PUBLIC.ARTICLE ALTER COLUMN ID RESTART WITH 0
CREATE CACHED TABLE PUBLIC.SALESORDER_ROW(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SALESORDER_ID INTEGER,ARTICLE_ID INTEGER,NEEDED DECIMAL(10,2),CONSTRAINT FK_SALESORDER_ROW_ARTICLE FOREIGN KEY(ARTICLE_ID) REFERENCES PUBLIC.ARTICLE(ID) ON DELETE CASCADE)
ALTER TABLE PUBLIC.SALESORDER_ROW ALTER COLUMN ID RESTART WITH 0
CREATE INDEX IDX_SALESORDER_ROW_ARTICLE ON PUBLIC.SALESORDER_ROW(ARTICLE_ID)
CREATE INDEX IDX_SALESORDER_ROW_SALESORDER ON PUBLIC.SALESORDER_ROW(SALESORDER_ID)
CREATE MEMORY TABLE PUBLIC.TSTTBL(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(10),MIDDLENAME VARCHAR(10),LASTNAME VARCHAR(10),COMMONLINK VARCHAR(20))
ALTER TABLE PUBLIC.TSTTBL ALTER COLUMN ID RESTART WITH 2
CREATE VIEW PUBLIC.TSTVIEW (C1,COMMONLINK) AS SELECT FIRSTNAME||MIDDLENAME||LASTNAME,COMMONLINK FROM PUBLIC.TSTTBL
CREATE MEMORY TABLE PUBLIC.BT1(ID VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.BT2(ID VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.BT3(ID VARCHAR(10))
CREATE MEMORY TABLE PUBLIC."TAB"("a" INTEGER,"c" INTEGER)
CREATE MEMORY TABLE PUBLIC.TC6(A INTEGER,CHECK((PUBLIC.TC6.A IS NULL) OR (PUBLIC.TC6.A>1)))
CREATE MEMORY TABLE PUBLIC.TC7(A DECIMAL(6,2),B DATE)
CREATE MEMORY TABLE PUBLIC.TST(A VARCHAR(10),B VARCHAR(10),C VARCHAR(10),CONSTRAINT K1 CHECK( CASEWHEN((PUBLIC.TST.A IS NULL),((PUBLIC.TST.B IS NULL) AND (PUBLIC.TST.C IS NULL)),TRUE)))
CREATE CACHED TABLE PUBLIC.GROUPSUBJECT(DESCRIPTION VARCHAR(10),PARENT BIGINT,ADMIN BIGINT NOT NULL,ID_ BIGINT,UNIQUE(ID_),CONSTRAINT GROUPSUBJECT_REF_PARENT FOREIGN KEY(PARENT) REFERENCES PUBLIC.GROUPSUBJECT(ID_))
CREATE CACHED TABLE PUBLIC.USERSUBJECT(SUBJECTNAME VARCHAR(10) NOT NULL PRIMARY KEY,ID_ BIGINT,UNIQUE(ID_))
CREATE CACHED TABLE PUBLIC.TESTE(ID INTEGER PRIMARY KEY,IDREF INTEGER DEFAULT 10,FOREIGN KEY(IDREF) REFERENCES PUBLIC.TESTE(ID) ON DELETE SET DEFAULT)
CREATE MEMORY TABLE PUBLIC.USER(USER_ID VARCHAR(15) NOT NULL,PASSWD_TX VARCHAR(15) NOT NULL,CONSTRAINT USER_PK PRIMARY KEY(USER_ID))
CREATE MEMORY TABLE PUBLIC.ROLE(ROLE_NM VARCHAR(25) NOT NULL,DESC VARCHAR(100) NOT NULL,CONSTRAINT ROLE_PK PRIMARY KEY(ROLE_NM))
CREATE MEMORY TABLE PUBLIC.USER_ROLES(USER_ID VARCHAR(15) NOT NULL,ROLE_NM VARCHAR(25) NOT NULL,CONSTRAINT USER_ROLES_PK PRIMARY KEY(USER_ID,ROLE_NM),CONSTRAINT FK_USER_ROLES_USER_0 FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(USER_ID),CONSTRAINT FK_USER_ROLES_ROLE_1 FOREIGN KEY(ROLE_NM) REFERENCES PUBLIC.ROLE(ROLE_NM))
CREATE MEMORY TABLE PUBLIC.DEPARTMENT(DEPID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,DEPNAME VARCHAR(20),PARENTID INTEGER,FOREIGN KEY(PARENTID) REFERENCES PUBLIC.DEPARTMENT(DEPID))
ALTER TABLE PUBLIC.DEPARTMENT ALTER COLUMN DEPID RESTART WITH 3
CREATE MEMORY TABLE PUBLIC.TFK(C CHARACTER(1),ID INTEGER,V VARCHAR(10),PRIMARY KEY(C,ID))
CREATE MEMORY TABLE PUBLIC.TFK2(C CHARACTER(1),ID INTEGER,V VARCHAR(10),FOREIGN KEY(C,ID) REFERENCES PUBLIC.TFK(C,ID))
CREATE CACHED TABLE PUBLIC.ARTICLE_A(ID INTEGER PRIMARY KEY,VAL VARCHAR(20))
CREATE CACHED TABLE PUBLIC.EMPLOYEE_A(ID INTEGER PRIMARY KEY,VAL VARCHAR(20))
CREATE CACHED TABLE PUBLIC.MOVE_A(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,EMPLOYEE_ID INTEGER,ARTICLE_ID INTEGER,BATCH VARCHAR(10),SOURCE_ADDRESS VARCHAR(15),DEST_ADDRESS VARCHAR(15),QUANTITY DECIMAL(10,2),DONE TIMESTAMP,CONSTRAINT FK_MOVE_ARTICLE FOREIGN KEY(ARTICLE_ID) REFERENCES PUBLIC.ARTICLE_A(ID) ON DELETE CASCADE,CONSTRAINT FK_MOVE_EMPLOYEE FOREIGN KEY(EMPLOYEE_ID) REFERENCES PUBLIC.EMPLOYEE_A(ID) ON DELETE CASCADE)
ALTER TABLE PUBLIC.MOVE_A ALTER COLUMN ID RESTART WITH 1
CREATE INDEX IDX_MOVE_EMPLOYEE ON PUBLIC.MOVE_A(EMPLOYEE_ID)
CREATE INDEX IDX_MOVE_ARTICLE ON PUBLIC.MOVE_A(ARTICLE_ID)
CREATE INDEX IDX_MOVE_BATCH ON PUBLIC.MOVE_A(BATCH)
CREATE INDEX IDX_MOVE_DONE ON PUBLIC.MOVE_A(DONE)
CREATE GLOBAL TEMPORARY TABLE PUBLIC.TMPTBL1(I INTEGER)
CREATE GLOBAL TEMPORARY TABLE PUBLIC.TMPTBL2(I INTEGER)
CREATE MEMORY TABLE PUBLIC.VWT1(I INTEGER)
CREATE MEMORY TABLE PUBLIC.VWJ1(I INTEGER,VC VARCHAR(10))
CREATE VIEW PUBLIC.VWV28 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I IN(0,1,11,12)
CREATE VIEW PUBLIC.VWV29 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I<1
CREATE VIEW PUBLIC.VWV30 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV31 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV32 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=0)
CREATE VIEW PUBLIC.VWV33 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV34 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV35 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=0)
CREATE VIEW PUBLIC.VWV36 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV37 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV38 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV39 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT VWJ1.I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV40 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I IN(SELECT VWJ1.I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV41 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT VWJ1.I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV42 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT I FROM PUBLIC.VWJ1 WHERE VWJ1.I=1)
CREATE VIEW PUBLIC.VWV43 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE VWT1.I=(SELECT VWJ1.I FROM PUBLIC.VWJ1 WHERE VWJ1.I=1)
CREATE VIEW PUBLIC.VWV44 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV45 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV46 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV47 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV48 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV49 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV50 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV51 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I IN(SELECT I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV52 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV53 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT VWJ1.I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV54 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I IN(SELECT VWJ1.I FROM PUBLIC.VWJ1)
CREATE VIEW PUBLIC.VWV55 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT VWJ1.I FROM PUBLIC.VWJ1 WHERE I=1)
CREATE VIEW PUBLIC.VWV56 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT I FROM PUBLIC.VWJ1 WHERE VWJ1.I=1)
CREATE VIEW PUBLIC.VWV57 (I) AS SELECT PUBLIC.VWT1.I FROM PUBLIC.VWT1 WHERE I=(SELECT VWJ1.I FROM PUBLIC.VWJ1 WHERE VWJ1.I=1)
CREATE MEMORY TABLE PUBLIC.INDT1(I INTEGER)
CREATE UNIQUE INDEX INDI1 ON PUBLIC.INDT1(I)
CREATE MEMORY TABLE PUBLIC.INDT2(I INTEGER)
CREATE UNIQUE INDEX INDI2 ON PUBLIC.INDT2(I)
CREATE MEMORY TABLE PUBLIC.INDT3(I INTEGER)
CREATE UNIQUE INDEX INDI3 ON PUBLIC.INDT3(I)
CREATE MEMORY TABLE PUBLIC.INDT4(I INTEGER)
CREATE UNIQUE INDEX INDI4 ON PUBLIC.INDT4(I)
CREATE MEMORY TABLE PUBLIC.INDT101(I INTEGER)
CREATE MEMORY TABLE PUBLIC.CINDT1(I INTEGER)
CREATE UNIQUE INDEX CINDI1 ON PUBLIC.CINDT1(I)
CREATE MEMORY TABLE PUBLIC.CINDT2(I INTEGER)
CREATE UNIQUE INDEX CINDI2 ON PUBLIC.CINDT2(I)
CREATE MEMORY TABLE PUBLIC.CINDT3(I INTEGER)
CREATE UNIQUE INDEX CINDI3 ON PUBLIC.CINDT3(I)
CREATE MEMORY TABLE PUBLIC.CINDT4(I INTEGER)
CREATE UNIQUE INDEX CINDI4 ON PUBLIC.CINDT4(I)
CREATE MEMORY TABLE PUBLIC.CINDT101(I INTEGER)
CREATE MEMORY TABLE PUBLIC.SEQT1(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TRGT1(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TRGT2(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TRGT3(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TRGT4(I INTEGER)
CREATE MEMORY TABLE PUBLIC.CONJ1(I INTEGER PRIMARY KEY,VC VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.CONT1(I INTEGER,CONSTRAINT CONUC1 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.CONT2(I INTEGER,CONSTRAINT CONUC2 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.CONT3(I INTEGER,CONSTRAINT CONUC3 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.CONT4(I INTEGER,CONSTRAINT CONUC4 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.CONT5(I INTEGER,CONSTRAINT CONPK5 PRIMARY KEY(I))
CREATE MEMORY TABLE PUBLIC.CONT6(I INTEGER,CONSTRAINT CONPK6 PRIMARY KEY(I))
CREATE MEMORY TABLE PUBLIC.CONT7(I INTEGER,CONSTRAINT CONPK7 PRIMARY KEY(I))
CREATE MEMORY TABLE PUBLIC.CONT8(I INTEGER,CONSTRAINT CONPK8 PRIMARY KEY(I))
CREATE MEMORY TABLE PUBLIC.CONT9(I INTEGER,CONSTRAINT CONFK9 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT10(I INTEGER,CONSTRAINT CONFK10 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT11(I INTEGER,CONSTRAINT CONFK11 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT12(I INTEGER,CONSTRAINT CONFK12 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT13(I INTEGER,CONSTRAINT CONFK13 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT14(I INTEGER,CONSTRAINT CONFK14 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT15(I INTEGER,CONSTRAINT CONFK15 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT16(I INTEGER,CONSTRAINT CONFK16 FOREIGN KEY(I) REFERENCES PUBLIC.CONJ1(I))
CREATE MEMORY TABLE PUBLIC.CONT17(I INTEGER,CONSTRAINT CONC17 CHECK(PUBLIC.CONT17.I<1))
CREATE MEMORY TABLE PUBLIC.CONT18(I INTEGER,CONSTRAINT CONC18 CHECK((PUBLIC.CONT18.I) IN ((0),(2))))
CREATE MEMORY TABLE PUBLIC.CONT19(I INTEGER,CONSTRAINT CONC19 CHECK(PUBLIC.CONT19.I=0))
CREATE MEMORY TABLE PUBLIC.CONT20(I INTEGER,CONSTRAINT CONC20 CHECK(PUBLIC.CONT20.I!=1))
CREATE MEMORY TABLE PUBLIC.TTMAIN(DOUBLEQUOTE CHARACTER(10),SINGLEQUOTE CHARACTER(10))
CREATE TEXT TABLE PUBLIC.TT(DOUBQUOTE CHARACTER(10),SINGQUOTE CHARACTER(10))
CREATE TEXT TABLE PUBLIC.TIDENT(C1 INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL,C2 VARCHAR(20))
CREATE TEXT TABLE PUBLIC.TSINGLE(C1 INTEGER)
CREATE MEMORY TABLE PUBLIC.USER_PROFILE(NAME VARCHAR(10),PROFILE INTEGER)
CREATE VIEW PUBLIC.USER_SECURITY_PROFILE_VIEW (NAME,PROFILE) AS SELECT PUBLIC.USER_PROFILE.NAME,PUBLIC.USER_PROFILE.PROFILE FROM PUBLIC.USER_PROFILE WHERE NAME=USER()
CREATE MEMORY TABLE PUBLIC.PTABLE(I INTEGER)
CREATE INDEX PINDEX ON PUBLIC.PTABLE(I)
CREATE MEMORY TABLE PUBLIC.BEWERB(VCODE CHARACTER(10) NOT NULL,ID SMALLINT NOT NULL)
CREATE UNIQUE INDEX BEWERB_FK1 ON PUBLIC.BEWERB(VCODE)
CREATE UNIQUE INDEX BEWERB_FK2 ON PUBLIC.BEWERB(ID)
CREATE MEMORY TABLE PUBLIC.DUPS(PK INTEGER NOT NULL PRIMARY KEY,VAL VARCHAR(10) NOT NULL)
CREATE MEMORY TABLE PUBLIC.TBLT1(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TBLT2(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TBLT3(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TBLT4(I INTEGER)
CREATE CACHED TABLE PUBLIC.CONFIGUSER(USR_USERID NUMERIC(128) NOT NULL PRIMARY KEY,USR_USERNAME VARCHAR(10) NOT NULL,USR_PASSWORD VARCHAR(10))
CREATE INDEX IDX_USERNAME ON PUBLIC.CONFIGUSER(USR_USERNAME)
CREATE CACHED TABLE PUBLIC.TESTTRIG(C1 INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL,C2 VARCHAR(40),C3 INTEGER)
ALTER TABLE PUBLIC.TESTTRIG ALTER COLUMN C1 RESTART WITH 0
CREATE MEMORY TABLE PUBLIC.X(A INTEGER,B INTEGER)
CREATE INDEX IDX2 ON PUBLIC.X(A)
CREATE MEMORY TABLE PUBLIC.Y(A INTEGER,B INTEGER)
CREATE INDEX IDX1 ON PUBLIC.Y(A)
CREATE MEMORY TABLE PUBLIC.OWNERS(ID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(100))
CREATE MEMORY TABLE PUBLIC.ACCOUNTS(ID INTEGER NOT NULL PRIMARY KEY,ACCOUNTNAME VARCHAR(100),ACCOUNTNR INTEGER,ACCOUNTTYPE INTEGER,OWNERID INTEGER,CONSTRAINT FK_ACCOUNTS FOREIGN KEY(OWNERID) REFERENCES PUBLIC.OWNERS(ID))
CREATE MEMORY TABLE PUBLIC.CREDITS(ID INTEGER,ACCOUNTID INTEGER,AMOUNT DOUBLE,CONSTRAINT FK_CREDITS FOREIGN KEY(ACCOUNTID) REFERENCES PUBLIC.ACCOUNTS(ID) ON UPDATE CASCADE)
CREATE MEMORY TABLE PUBLIC.STUDENT(STUDENT_ID BIGINT NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE PUBLIC.TEACHER(TEACHER_ID BIGINT NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE PUBLIC.STUDENT_TEACHER(STUDENT_ID BIGINT NOT NULL,TEACHER_ID BIGINT NOT NULL)
CREATE MEMORY TABLE PUBLIC.M(I INTEGER)
CREATE MEMORY TABLE PUBLIC.PSCHT1(I INTEGER)
CREATE UNIQUE INDEX PSCHI1 ON PUBLIC.PSCHT1(I)
CREATE MEMORY TABLE PUBLIC.PSCHT2(I INTEGER)
CREATE VIEW PUBLIC.PSCHV1 (I) AS SELECT PUBLIC.PSCHT1.I FROM PUBLIC.PSCHT1
CREATE VIEW PUBLIC.PSCHV2 (I) AS SELECT PUBLIC.PSCHT1.I FROM PUBLIC.PSCHT1
CREATE MEMORY TABLE PUBLIC.PSCHCT1(I INTEGER,CONSTRAINT PSCHUC1 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.PSCHCT2(I INTEGER,CONSTRAINT PSCHUC2 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.PSCHCT3(I INTEGER,CONSTRAINT PSCHUC3 UNIQUE(I))
CREATE MEMORY TABLE PUBLIC.TABLE1(COL1 INTEGER NOT NULL,COL2 INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.TABLE2(COL1 INTEGER,COL2 INTEGER)
CREATE MEMORY TABLE PUBLIC.A(ID INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.B(ID INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.C(ID INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.SQLUNKNOWNCOMPLIANCECHECK(A VARCHAR(1),B VARCHAR(1))
CREATE MEMORY TABLE PUBLIC.ARITH(INTA INTEGER,INTB INTEGER,INTC INTEGER)
CREATE CACHED TABLE PUBLIC.TESTB(ID INTEGER,PARENT INTEGER DEFAULT 20,REF INTEGER,DATA VARCHAR(200),UNIQUE(ID),FOREIGN KEY(PARENT) REFERENCES PUBLIC.TESTB(ID) ON DELETE SET DEFAULT)
CREATE CACHED TABLE PUBLIC.TESTA(A INTEGER PRIMARY KEY,B INTEGER,FOREIGN KEY(B) REFERENCES PUBLIC.TESTA(A) ON DELETE CASCADE ON UPDATE CASCADE)
CREATE MEMORY TABLE PUBLIC.PROCESSDETAIL(ID BIGINT NOT NULL PRIMARY KEY,ALERTLEVEL INTEGER NOT NULL,VALUE VARCHAR(255) NOT NULL,TSTAMP TIMESTAMP NOT NULL,ATTRIBUTEKEY INTEGER NOT NULL,PROCESSID BIGINT NOT NULL)
CREATE MEMORY TABLE PUBLIC.MAIN(DATA VARCHAR(20))
CREATE MEMORY TABLE PUBLIC.REF(ID INTEGER PRIMARY KEY,DATA VARCHAR(20),REF INTEGER,UNIQUE(DATA))
CREATE MEMORY TABLE PUBLIC."testac"("b" INTEGER)
CREATE MEMORY TABLE PUBLIC."testacc"("a" INTEGER,"b" INTEGER,"c" VARCHAR(10) DEFAULT 'aa')
CREATE CACHED TABLE PUBLIC.TESTTABLE(ASTRING VARCHAR(256) NOT NULL,FIRSTNUM INTEGER NOT NULL,ADATE DATE NOT NULL,SECONDNUM INTEGER NOT NULL,THIRDNUM INTEGER NOT NULL,ANAME VARCHAR(32) NOT NULL)
CREATE MEMORY TABLE PUBLIC.T1(T1C1 INTEGER,T1C2 INTEGER)
CREATE INDEX I1 ON PUBLIC.T1(T1C1)
CREATE MEMORY TABLE PUBLIC.T2(T2C1 INTEGER,T2C2 INTEGER)
CREATE INDEX I2 ON PUBLIC.T2(T2C1)
CREATE MEMORY TABLE PUBLIC.T3(C1 INTEGER,C2 INTEGER)
CREATE INDEX I3 ON PUBLIC.T3(C1)
CREATE MEMORY TABLE PUBLIC.T4(C1 INTEGER,C2 INTEGER)
CREATE INDEX I4 ON PUBLIC.T4(C1)
CREATE VIEW PUBLIC.V1 (T1C1,T1C2) AS SELECT PUBLIC.T1.T1C1,PUBLIC.T1.T1C2 FROM PUBLIC.T1
CREATE VIEW PUBLIC.V2 (T2C1,T2C2) AS SELECT PUBLIC.T2.T2C1,PUBLIC.T2.T2C2 FROM PUBLIC.T2
CREATE VIEW PUBLIC.V3 (C1,C2) AS SELECT PUBLIC.T3.C1,PUBLIC.T3.C2 FROM PUBLIC.T3
CREATE VIEW PUBLIC.V4 (C1,C2) AS SELECT PUBLIC.T4.C1,PUBLIC.T4.C2 FROM PUBLIC.T4
CREATE VIEW PUBLIC.V5 (VC1,VC2) AS SELECT PUBLIC.T1.T1C1,PUBLIC.T1.T1C2 FROM PUBLIC.T1
CREATE VIEW PUBLIC.V6 (VC1,VC2) AS SELECT PUBLIC.T2.T2C1,PUBLIC.T2.T2C2 FROM PUBLIC.T2
CREATE VIEW PUBLIC.V7 (VC1,VC2) AS SELECT PUBLIC.T3.C1,PUBLIC.T3.C2 FROM PUBLIC.T3
CREATE VIEW PUBLIC.V8 (VC1,VC2) AS SELECT PUBLIC.T4.C1,PUBLIC.T4.C2 FROM PUBLIC.T4
CREATE MEMORY TABLE PUBLIC.TMAIN(C1 VARCHAR(10),I1 INTEGER,C2 VARCHAR(10))
CREATE TEXT TABLE PUBLIC.T(C1 VARCHAR(10),I1 INTEGER,C2 VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.FLIMIT(BIT1 BIT(1),BIT3 BIT(3),BITVAR BIT VARYING(3))
CREATE CACHED TABLE PUBLIC.CTBLT1(I INTEGER,CONSTRAINT CPK_WORKAROUND PRIMARY KEY(I))
CREATE CACHED TABLE PUBLIC.CTBLT2(I INTEGER)
CREATE CACHED TABLE PUBLIC.CTBLT3(I INTEGER)
CREATE CACHED TABLE PUBLIC.TBLJ1(I INTEGER,VC VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.CTBLT4(I INTEGER)
CREATE MEMORY TABLE PUBLIC.TESTCASE(ID INTEGER,DATA VARCHAR(10),FILLER VARCHAR(10))
CREATE MEMORY TABLE PUBLIC.TESTCASE2(ID INTEGER,DATA VARCHAR(10),FILLER VARCHAR(10),DATECOL DATE)
CREATE MEMORY TABLE PUBLIC.T0(C VARCHAR(20),I INTEGER)
CREATE MEMORY TABLE PUBLIC.TEST(ID INTEGER,COST NUMERIC(3,1))
CREATE CACHED TABLE PUBLIC."CD"("ID" INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"Title" VARCHAR(50))
ALTER TABLE PUBLIC."CD" ALTER COLUMN "ID" RESTART WITH 0
CREATE CACHED TABLE PUBLIC.TT1(ID INTEGER NOT NULL PRIMARY KEY,TT2REF INTEGER)
CREATE CACHED TABLE PUBLIC.TT2(ID INTEGER NOT NULL PRIMARY KEY)
CREATE PROCEDURE PUBLIC.RECORD(IN MSG VARCHAR(60)) SPECIFIC RECORD_10337 LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC INSERT INTO PUBLIC.LOG_TABLE(MESSAGE)VALUES(MSG);END
CREATE PROCEDURE PUBLIC.PROC_TRIG(IN IN_ARG_ONE VARCHAR(10)) SPECIFIC PROC_TRIG_10374 LANGUAGE SQL DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL LABEL_ONE:BEGIN ATOMIC INSERT INTO PUBLIC.TRIGLOG VALUES DEFAULT,IN_ARG_ONE,NULL;END LABEL_ONE
CREATE PROCEDURE PUBLIC.PROCEDURE_TEST(OUT RETVAL INTEGER) SPECIFIC PROCEDURE_TEST_10619 LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC DELETE FROM PUBLIC.TT2;INSERT INTO PUBLIC.TT2(ID)VALUES(1);INSERT INTO PUBLIC.TT2(ID)VALUES(2);SELECT COUNT(ID)INTO RETVAL FROM PUBLIC.TT2;END
SET SCHEMA S2
CREATE MEMORY TABLE S2.T2(I INTEGER)
SET SCHEMA BSCH
CREATE SEQUENCE BSCH.BS1 AS INTEGER START WITH 0
CREATE SEQUENCE BSCH.BS3 AS INTEGER START WITH 0
CREATE SEQUENCE BSCH.BS2 AS INTEGER START WITH 0
CREATE SEQUENCE BSCH.BS4 AS INTEGER START WITH 0
CREATE SEQUENCE BSCH.BS5 AS INTEGER START WITH 0
CREATE MEMORY TABLE BSCH.BT(I INTEGER)
SET SCHEMA SCHEMAFK1
CREATE MEMORY TABLE SCHEMAFK1.TABLE1(TABLE1_ID INTEGER PRIMARY KEY)
SET SCHEMA SCHEMAFK2
CREATE MEMORY TABLE SCHEMAFK2.TABLE2(TABLE2_ID INTEGER PRIMARY KEY,TABLE1_ID INTEGER)
CREATE MEMORY TABLE SCHEMAFK2.TABLE3(TABLE3_ID INTEGER PRIMARY KEY,TABLE1_ID INTEGER)
CREATE MEMORY TABLE SCHEMAFK2.TABLE4(TABLE4_ID INTEGER PRIMARY KEY,TABLE1_ID INTEGER)
ALTER TABLE PUBLIC.GROUPSUBJECT ADD CONSTRAINT GROUPSUBJECT_REF_ADMIN FOREIGN KEY(ADMIN) REFERENCES PUBLIC.USERSUBJECT(ID_)
ALTER TABLE PUBLIC.TT1 ADD CONSTRAINT FK2 FOREIGN KEY(TT2REF) REFERENCES PUBLIC.TT2(ID)
ALTER TABLE SCHEMAFK2.TABLE2 ADD FOREIGN KEY(TABLE1_ID) REFERENCES SCHEMAFK1.TABLE1(TABLE1_ID)
ALTER TABLE SCHEMAFK2.TABLE3 ADD CONSTRAINT FKTBL3 FOREIGN KEY(TABLE1_ID) REFERENCES SCHEMAFK1.TABLE1(TABLE1_ID)
ALTER TABLE SCHEMAFK2.TABLE4 ADD CONSTRAINT FKTBL4 FOREIGN KEY(TABLE1_ID) REFERENCES SCHEMAFK1.TABLE1(TABLE1_ID)
SET SCHEMA PUBLIC
CREATE TRIGGER PUBLIC.TRIGGER2 INSTEAD OF INSERT ON PUBLIC.VIEWINST REFERENCING NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC INSERT INTO PUBLIC.TESTTRIG12 VALUES(NEWROW.VID,NEWROW.VDATA2,CURRENT_DATE);INSERT INTO PUBLIC.TESTTRIG13 VALUES(NEWROW.VID,NEWROW.VDATA3,'inserted');END
CREATE TRIGGER PUBLIC.TRIGGER3 INSTEAD OF DELETE ON PUBLIC.VIEWINST REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC DELETE FROM PUBLIC.TESTTRIG12 WHERE TESTTRIG12.ID=OLDROW.VID;DELETE FROM PUBLIC.TESTTRIG13 WHERE TESTTRIG13.ID=OLDROW.VID;END
CREATE TRIGGER PUBLIC.TRIGGER14 INSTEAD OF UPDATE ON PUBLIC.VIEWINST REFERENCING OLD ROW AS OLDROW NEW ROW AS NEWROW FOR EACH ROW BEGIN ATOMIC UPDATE PUBLIC.TESTTRIG12 SET DATA2=NEWROW.VDATA2,UPDATED=CURRENT_DATE WHERE TESTTRIG12.ID=OLDROW.VID;UPDATE PUBLIC.TESTTRIG13 SET DATA3=NEWROW.VDATA3,OP='updated'WHERE TESTTRIG13.ID=OLDROW.VID;END
CREATE TRIGGER PUBLIC.MANUAL_LOG_TRIGGER AFTER INSERT ON PUBLIC.BASE_TABLE INSERT INTO PUBLIC.LOG_TABLE(MESSAGE)VALUES('totally manual trigger event')
CREATE TRIGGER PUBLIC.CALL_LOG_TRIGGER AFTER INSERT ON PUBLIC.BASE_TABLE CALL RECORD('trigger routine CALL event')
CREATE TRIGGER PUBLIC.EXTRA_INS_TRIGGER_ AFTER INSERT ON PUBLIC.BASE_TABLE REFERENCING NEW ROW AS NEW_ROW FOR EACH ROW WHEN (MOD(new_row.i,2) = 1) INSERT INTO PUBLIC.BASE_TABLE(I,VC)VALUES(1+NEW_ROW.I,'TRIG_ADDITION'||NEW_ROW.VC)
CREATE TRIGGER PUBLIC.TD AFTER DELETE ON PUBLIC.KD REFERENCING OLD ROW AS OLDROW FOR EACH ROW BEGIN ATOMIC UPDATE PUBLIC.K SET KVER=NULL WHERE KID=OLDROW.KDID AND KVER=OLDROW.KDVER;END
CREATE TRIGGER PUBLIC.TRGTRIG1 AFTER INSERT ON PUBLIC.TRGT1 CALL "org.hsqldb.test.BlaineTrig"
CREATE TRIGGER PUBLIC.TRGTRIG2 AFTER INSERT ON PUBLIC.TRGT2 CALL "org.hsqldb.test.BlaineTrig"
CREATE TRIGGER PUBLIC.TRGTRIG3 AFTER INSERT ON PUBLIC.TRGT3 CALL "org.hsqldb.test.BlaineTrig"
CREATE TRIGGER PUBLIC.TRGTRIG4 AFTER INSERT ON PUBLIC.TRGT4 CALL "org.hsqldb.test.BlaineTrig"
CREATE TRIGGER PUBLIC.PTRIG1 AFTER INSERT ON PUBLIC.PSCHT1 CALL "org.hsqldb.test.BlaineTrig"
CREATE TRIGGER PUBLIC.PTRIG2 AFTER INSERT ON PUBLIC.PSCHT2 CALL "org.hsqldb.test.BlaineTrig"
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
ALTER SEQUENCE PUBLIC.S00 RESTART WITH 22
ALTER SEQUENCE PUBLIC.S01 RESTART WITH 25
ALTER SEQUENCE PUBLIC.S02 RESTART WITH 2
ALTER SEQUENCE PUBLIC.S03 RESTART WITH 2
ALTER SEQUENCE PUBLIC.S04 RESTART WITH 2
ALTER SEQUENCE PUBLIC.S05 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S06 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S07 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S08 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S09 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S10 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S11 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S12 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S13 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S14 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S15 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S16 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S17 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S18 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S19 RESTART WITH 0
ALTER SEQUENCE PUBLIC.PS1 RESTART WITH 33
ALTER SEQUENCE PUBLIC.PS3 RESTART WITH 0
ALTER SEQUENCE PUBLIC.PS2 RESTART WITH 33
ALTER SEQUENCE PUBLIC.PS4 RESTART WITH 0
ALTER SEQUENCE PUBLIC.PS5 RESTART WITH 33
ALTER SEQUENCE PUBLIC.PS6 RESTART WITH 33
ALTER SEQUENCE PUBLIC.PS7 RESTART WITH 0
ALTER SEQUENCE PUBLIC.PS8 RESTART WITH 0
ALTER SEQUENCE PUBLIC.PS9 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S1 RESTART WITH 0
ALTER SEQUENCE PUBLIC.S2 RESTART WITH 2
ALTER SEQUENCE PUBLIC.PSEQUENCE RESTART WITH 0
ALTER SEQUENCE BSCH.BS1 RESTART WITH 33
ALTER SEQUENCE BSCH.BS3 RESTART WITH 0
ALTER SEQUENCE BSCH.BS2 RESTART WITH 33
ALTER SEQUENCE BSCH.BS4 RESTART WITH 0
ALTER SEQUENCE BSCH.BS5 RESTART WITH 0
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
COMMENT ON COLUMN SCHEMAFK1.TABLE1.TABLE1_ID IS 'a short column comment'
COMMENT ON TABLE SCHEMAFK1.TABLE1 IS 'a short table comment'
SET TABLE PUBLIC.CT11 INDEX '4 4 0 0 1'
SET TABLE PUBLIC.CT12 INDEX '10 10 0 0 1'
SET TABLE PUBLIC.CT13 INDEX '16 16 0 0 1'
SET TABLE PUBLIC.CT14 INDEX '22 22 0 0 1'
SET TABLE PUBLIC.CT15 INDEX '28 28 0 0 1'
SET TABLE PUBLIC.CT17 INDEX '34 34 0 0 1'
SET TABLE PUBLIC.MY_GROUP INDEX '44 0 4'
SET TABLE PUBLIC.DUAL INDEX '56 0 1'
SET TABLE PUBLIC.MY_SERVER INDEX '65 0 3'
SET TABLE PUBLIC.THEME INDEX '75 0 1'
SET TABLE PUBLIC."Artist" INDEX '85 0 1'
SET TABLE PUBLIC."Album" INDEX '1544 1544 0 0 1'
SET TABLE PUBLIC."Song" INDEX '101 101 0 0 1'
SET TABLE PUBLIC.TARRAY INDEX '112 0 2'
SET TABLE PUBLIC.TRIGLOG INDEX '449 0 4'
SET TABLE PUBLIC.PROPERTYVALUE INDEX '474 0 2'
SET TABLE PUBLIC.GROUPSUBJECT INDEX '1220 1220 1220 1220 0 0 0 0 1'
SET TABLE PUBLIC.USERSUBJECT INDEX '1202 1202 0 0 1'
SET TABLE PUBLIC.ARTICLE_A INDEX '1311 0 1'
SET TABLE PUBLIC.EMPLOYEE_A INDEX '1316 0 1'
SET TABLE PUBLIC.MOVE_A INDEX '1343 1343 1343 1343 1343 1343 1343 0 0 0 0 0 0 0 1'
SET TABLE PUBLIC.CONFIGUSER INDEX '28626 28617 0 0 6'
SET TABLE PUBLIC.TESTB INDEX '28843 28853 28853 0 0 0 3'
SET TABLE PUBLIC.TESTTABLE INDEX '29259 0 10'
SET TABLE PUBLIC.CTBLT1 INDEX '29346 0 2'
SET TABLE PUBLIC.TBLJ1 INDEX '29341 0 1'
SET TABLE PUBLIC.TT2 INDEX '29358 0 2'
SET TABLE PUBLIC.TT SOURCE 'tt.txt;quoted=false;fs=\t;ignore_first=true'
SET TABLE PUBLIC.TIDENT SOURCE 'ttt.txt; all_quoted=true;ignore_first=true'
SET TABLE PUBLIC.TSINGLE SOURCE 'tttt.txt;ignore_first=true'
SET TABLE PUBLIC.T SOURCE 't.txt; all_quoted=true;ignore_first=true'
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.PS1 TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.PS2 TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.PS5 TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.PS6 TO PUBLIC
GRANT USAGE ON SEQUENCE BSCH.BS5 TO PUBLIC
GRANT R311 TO R31
GRANT DBA TO SA
GRANT CHANGE_AUTHORIZATION,SESAMEROLE TO CANI
GRANT CHANGE_AUTHORIZATION TO BLAINE
GRANT ALL ON TABLE PUBLIC.PT TO BLAINE
GRANT ALL ON TABLE BSCH.BT TO BLAINE
GRANT CHANGE_AUTHORIZATION TO PUSER
GRANT DBA TO MATT
GRANT DBA TO SA1
GRANT DBA TO SA2
GRANT DBA TO SA3
GRANT CHANGE_AUTHORIZATION TO ALTUSER1
GRANT CHANGE_AUTHORIZATION TO ALTUSER2
GRANT R1 TO OWNER1
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO MT15 VALUES(10)
INSERT INTO MT16 VALUES(10)
INSERT INTO MT17 VALUES(10)
INSERT INTO MT18 VALUES(10)
INSERT INTO COLORS VALUES(1,'red       ')
INSERT INTO COLORS VALUES(2,'green     ')
INSERT INTO COLORS VALUES(3,'orange    ')
INSERT INTO COLORS VALUES(4,'indigo    ')
INSERT INTO CONFIGNODETYPE VALUES(-1,-1,'prj')
INSERT INTO TEST1 VALUES(1,'hello')
INSERT INTO TEST2 VALUES(2,1,'world')
INSERT INTO TABLEA VALUES('LIMIT',2)
INSERT INTO TEST_MAXROWS VALUES(0)
INSERT INTO TEST_MAXROWS VALUES(1)
INSERT INTO TEST_MAXROWS VALUES(2)
INSERT INTO TEST_MAXROWS VALUES(3)
INSERT INTO TEST_MAXROWS VALUES(4)
INSERT INTO TEST_MAXROWS VALUES(5)
INSERT INTO TEST_MAXROWS VALUES(6)
INSERT INTO TEST_MAXROWS VALUES(7)
INSERT INTO IARRAY VALUES(1, ARRAY[11,NULL,13])
INSERT INTO IARRAY VALUES(2,NULL)
INSERT INTO IARRAY VALUES(3, ARRAY[21,22])
INSERT INTO "liste" VALUES(100,10)
INSERT INTO J1 VALUES(1,'one')
INSERT INTO DATE_TEST VALUES('2006-01-01')
INSERT INTO DATE_TEST VALUES('2007-01-01')
INSERT INTO DATE_TEST VALUES('2008-01-01')
INSERT INTO HIST VALUES('2014-01-13',1,10)
INSERT INTO GROUP_BY_BUG VALUES(1000,100,10.0E0,10.0E0,5)
INSERT INTO GROUP_BY_BUG VALUES(1001,100,10.45E0,15.0E0,3)
INSERT INTO SINGLE VALUES(1)
INSERT INTO SINGLE VALUES(2)
INSERT INTO SINGLE VALUES(3)
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:16.784000','test record')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:16.888000','totally manual trigger event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:16.992000','totally manual trigger event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:16.992000','trigger routine CALL event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:17.104000','totally manual trigger event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:17.104000','trigger routine CALL event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:17.104000','totally manual trigger event')
INSERT INTO LOG_TABLE VALUES('2014-01-13 12:31:17.104000','trigger routine CALL event')
INSERT INTO BASE_TABLE VALUES(0,1,'one')
INSERT INTO BASE_TABLE VALUES(1,2,'two')
INSERT INTO BASE_TABLE VALUES(2,3,'x')
INSERT INTO BASE_TABLE VALUES(3,4,'TRIG_ADDITIONx')
INSERT INTO KD VALUES(79,1)
INSERT INTO KD VALUES(70,2)
INSERT INTO K VALUES(79,1)
INSERT INTO K VALUES(70,2)
INSERT INTO TSJ1 VALUES(5,5)
INSERT INTO TSJ1 VALUES(6,6)
INSERT INTO TSJ1 VALUES(11,21)
INSERT INTO TSJ1 VALUES(12,22)
INSERT INTO TSJ1 VALUES(13,23)
INSERT INTO TSJ1 VALUES(14,24)
INSERT INTO TSJ1 VALUES(15,25)
INSERT INTO TSJ1 VALUES(16,26)
INSERT INTO TSJ1 VALUES(17,27)
INSERT INTO PT VALUES(1)
INSERT INTO BASE VALUES(1)
INSERT INTO BASE VALUES(2)
INSERT INTO CHILD VALUES(1,1)
INSERT INTO EMP VALUES('01','1000',NULL)
INSERT INTO EMP VALUES('01','1001','1000')
INSERT INTO T_BOSS VALUES('Ludovic','ANCIAUX')
INSERT INTO T_EMPLOYEE VALUES('Ludovic','ANCIAUX')
INSERT INTO T_EMPLOYEE VALUES('Bill','GATES')
INSERT INTO BOSS VALUES(1,'phb')
INSERT INTO EMPLOYEE VALUES(2,'dilbert',1)
INSERT INTO EMPLOYEE VALUES(3,'wally',NULL)
INSERT INTO NAMES VALUES('name1')
INSERT INTO NAMES VALUES('name2')
INSERT INTO PARAMS VALUES('name1','value1')
INSERT INTO SUPER VALUES(1,'mee')
INSERT INTO ASSOCIATED VALUES('mee',10)
INSERT INTO ASSOCIATED VALUES('you',20)
INSERT INTO SUB VALUES(1,'mee')
INSERT INTO TSTTBL VALUES(0,'John','Paul','Jones','http://cnn.com')
INSERT INTO TSTTBL VALUES(1,'Bridget','Paula','Murphy','http://cnn.com')
INSERT INTO BT1 VALUES('aaa')
INSERT INTO BT1 VALUES('bbb')
INSERT INTO BT1 VALUES('ccc')
INSERT INTO BT2 VALUES('aaa')
INSERT INTO BT3 VALUES('bbb')
INSERT INTO "TAB" VALUES(2,NULL)
INSERT INTO "TAB" VALUES(NULL,NULL)
INSERT INTO "TAB" VALUES(NULL,NULL)
INSERT INTO TC6 VALUES(2)
INSERT INTO TC6 VALUES(NULL)
INSERT INTO TC7 VALUES(10.00,'2009-01-01')
INSERT INTO TC7 VALUES(11.00,NULL)
INSERT INTO TST VALUES('A','B','C')
INSERT INTO TST VALUES(NULL,NULL,NULL)
INSERT INTO TST VALUES(NULL,NULL,NULL)
INSERT INTO USER VALUES('JOE_USER','eat@joes37')
INSERT INTO ROLE VALUES('ACTUAL_TALENT','What there''s a difference?')
INSERT INTO ROLE VALUES('SUPERSTAR','The best role')
INSERT INTO USER_ROLES VALUES('JOE_USER','SUPERSTAR')
INSERT INTO TFK VALUES('f',1,'string 1')
INSERT INTO TFK VALUES('f',4,'string 4')
INSERT INTO TFK2 VALUES('f',1,'string 1')
INSERT INTO TFK2 VALUES('f',4,'string 4')
INSERT INTO TFK2 VALUES('f',1,'string 1')
INSERT INTO VWT1 VALUES(0)
INSERT INTO VWT1 VALUES(1)
INSERT INTO VWJ1 VALUES(1,'one')
INSERT INTO INDT1 VALUES(0)
INSERT INTO INDT1 VALUES(1)
INSERT INTO INDT2 VALUES(0)
INSERT INTO INDT2 VALUES(1)
INSERT INTO INDT3 VALUES(0)
INSERT INTO INDT3 VALUES(1)
INSERT INTO INDT4 VALUES(0)
INSERT INTO INDT4 VALUES(1)
INSERT INTO INDT101 VALUES(0)
INSERT INTO INDT101 VALUES(1)
INSERT INTO CINDT1 VALUES(0)
INSERT INTO CINDT1 VALUES(1)
INSERT INTO CINDT2 VALUES(0)
INSERT INTO CINDT2 VALUES(1)
INSERT INTO CINDT3 VALUES(0)
INSERT INTO CINDT3 VALUES(1)
INSERT INTO CINDT4 VALUES(0)
INSERT INTO CINDT4 VALUES(1)
INSERT INTO CINDT101 VALUES(0)
INSERT INTO CINDT101 VALUES(1)
INSERT INTO SEQT1 VALUES(10)
INSERT INTO CONJ1 VALUES(1,'one')
INSERT INTO TTMAIN VALUES('noquoteA  ','noquoteB  ')
INSERT INTO TTMAIN VALUES('"inch     ','''foot     ')
INSERT INTO TTMAIN VALUES('_""_      ','_''''_      ')
INSERT INTO TTMAIN VALUES('"quoted"  ','''quoted''  ')
INSERT INTO TTMAIN VALUES('inch"     ','foot''     ')
INSERT INTO TTMAIN VALUES('"inch"    ','''foot''    ')
INSERT INTO USER_PROFILE VALUES('SA',10)
INSERT INTO USER_PROFILE VALUES('MATT',20)
INSERT INTO PTABLE VALUES(9)
INSERT INTO BEWERB VALUES('aaaaaaa   ',18)
INSERT INTO BEWERB VALUES('hijklmn   ',7)
INSERT INTO DUPS VALUES(1,'first')
INSERT INTO DUPS VALUES(2,'second')
INSERT INTO DUPS VALUES(3,'third')
INSERT INTO DUPS VALUES(4,'first')
INSERT INTO DUPS VALUES(5,'first')
INSERT INTO DUPS VALUES(6,'second')
INSERT INTO TBLT1 VALUES(0)
INSERT INTO TBLT1 VALUES(1)
INSERT INTO TBLT4 VALUES(0)
INSERT INTO X VALUES(2,1)
INSERT INTO X VALUES(5,1)
INSERT INTO Y VALUES(1,1)
INSERT INTO Y VALUES(2,1)
INSERT INTO Y VALUES(3,1)
INSERT INTO Y VALUES(4,1)
INSERT INTO OWNERS VALUES(1,'John')
INSERT INTO OWNERS VALUES(2,'Mary')
INSERT INTO OWNERS VALUES(3,'Jane')
INSERT INTO ACCOUNTS VALUES(1,'Bank',5101,0,1)
INSERT INTO ACCOUNTS VALUES(2,'Cash',5202,0,1)
INSERT INTO ACCOUNTS VALUES(3,'Giro',5303,0,2)
INSERT INTO ACCOUNTS VALUES(4,'Invoice',7505,1,1)
INSERT INTO CREDITS VALUES(1,1,1000.0E0)
INSERT INTO CREDITS VALUES(2,1,2000.0E0)
INSERT INTO CREDITS VALUES(3,2,100.0E0)
INSERT INTO CREDITS VALUES(4,2,200.0E0)
INSERT INTO STUDENT VALUES(1)
INSERT INTO STUDENT VALUES(2)
INSERT INTO TEACHER VALUES(100)
INSERT INTO STUDENT_TEACHER VALUES(1,100)
INSERT INTO M VALUES(11)
INSERT INTO PSCHT1 VALUES(0)
INSERT INTO PSCHT1 VALUES(1)
INSERT INTO PSCHT2 VALUES(0)
INSERT INTO PSCHT2 VALUES(1)
INSERT INTO PSCHCT1 VALUES(0)
INSERT INTO PSCHCT2 VALUES(0)
INSERT INTO PSCHCT3 VALUES(0)
INSERT INTO TABLE1 VALUES(1,1)
INSERT INTO TABLE1 VALUES(2,2)
INSERT INTO TABLE1 VALUES(1,6)
INSERT INTO TABLE2 VALUES(1,1)
INSERT INTO TABLE2 VALUES(2,2)
INSERT INTO TABLE2 VALUES(NULL,NULL)
INSERT INTO A VALUES(1)
INSERT INTO A VALUES(2)
INSERT INTO A VALUES(3)
INSERT INTO B VALUES(1)
INSERT INTO B VALUES(2)
INSERT INTO C VALUES(3)
INSERT INTO C VALUES(4)
INSERT INTO C VALUES(5)
INSERT INTO SQLUNKNOWNCOMPLIANCECHECK VALUES('a','b')
INSERT INTO ARITH VALUES(1,2,3)
INSERT INTO PROCESSDETAIL VALUES(1,1,'66','2007-01-01 08:00:00.000000',28,9)
INSERT INTO PROCESSDETAIL VALUES(2,0,'67','2007-01-01 07:59:40.000000',28,9)
INSERT INTO PROCESSDETAIL VALUES(3,0,'67','2007-01-01 06:59:40.000000',28,9)
INSERT INTO MAIN VALUES('data')
INSERT INTO "testac" VALUES(4)
INSERT INTO "testac" VALUES(5)
INSERT INTO "testac" VALUES(6)
INSERT INTO "testac" VALUES(7)
INSERT INTO "testac" VALUES(8)
INSERT INTO "testac" VALUES(9)
INSERT INTO "testacc" VALUES(4,4,'aa4')
INSERT INTO "testacc" VALUES(5,5,'aa5')
INSERT INTO "testacc" VALUES(6,6,'aa6')
INSERT INTO "testacc" VALUES(7,7,'aa7')
INSERT INTO "testacc" VALUES(8,8,'aa8')
INSERT INTO "testacc" VALUES(9,9,'aa9000000')
INSERT INTO "testacc" VALUES(10,10,NULL)
INSERT INTO T1 VALUES(1,11)
INSERT INTO T2 VALUES(2,12)
INSERT INTO T3 VALUES(3,13)
INSERT INTO T4 VALUES(4,14)
INSERT INTO TMAIN VALUES(NULL,NULL,NULL)
INSERT INTO TMAIN VALUES('aval1',NULL,'aval2')
INSERT INTO FLIMIT VALUES('1','101','101')
INSERT INTO CTBLT4 VALUES(0)
INSERT INTO TESTCASE VALUES(100,'xxxx',NULL)
INSERT INTO TESTCASE VALUES(200,'yyyy',NULL)
INSERT INTO TESTCASE VALUES(300,NULL,NULL)
INSERT INTO T0 VALUES('first',1)
INSERT INTO T0 VALUES('second',2)
INSERT INTO T0 VALUES('third',3)
INSERT INTO TEST VALUES(1,10.0)
INSERT INTO TEST VALUES(2,20.0)
INSERT INTO TEST VALUES(3,1.0)
INSERT INTO TEST VALUES(4,2.0)
SET SCHEMA BSCH
INSERT INTO BT VALUES(1)
